scale: 1
metatile: 2
name: OpenStreetMap Carto
description: A general-purpose OpenStreetMap mapnik style, in CartoCSS
bounds: &world
  - -180
  - -85.05112877980659
  - 180
  - 85.05112877980659
center:
  - 0
  - 0
  - 4
format: png
interactivity: false
minzoom: 0
maxzoom: 22
srs: "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over"

# Various parts to be included later on
_parts:
  # Extents are used for tilemill, and don't actually make it to the generated XML
  extents: &extents
    extent: *world
    srs-name: "900913"
    srs: "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over"
  extents84: &extents84
    extent: *world
    srs-name: "WGS84"
    srs: "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
  osm2pgsql: &osm2pgsql
    type: "postgis"
    dbname: "gis"
    key_field: ""
    geometry_field: "way"
    extent: "-20037508,-20037508,20037508,20037508"

Stylesheet:
  - style.mss
  - water.mss
  - water-features.mss
Layer:
  - id: water-lines-casing
    geometry: linestring
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            waterway,
            CASE WHEN tags->'intermittent' IN ('yes')
              OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn', 'winter', 'wet_season', 'dry_season')
              THEN 'yes' ELSE 'no' END AS int_intermittent,
            CASE WHEN tunnel IN ('yes', 'culvert') THEN 'yes' ELSE 'no' END AS int_tunnel
          FROM planet_osm_line
          WHERE waterway IN ('stream', 'drain', 'ditch')
        ) AS water_lines_casing
    properties:
      minzoom: 13
  - id: water-lines-low-zoom
    geometry: linestring
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            waterway,
            CASE WHEN tags->'intermittent' IN ('yes')
              OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn', 'winter', 'wet_season', 'dry_season')
              THEN 'yes' ELSE 'no' END AS int_intermittent
          FROM planet_osm_line
          WHERE waterway = 'river'
        ) AS water_lines_low_zoom
    properties:
      minzoom: 8
      maxzoom: 11
  - id: water-lines
    class: water-lines
    geometry: linestring
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            waterway,
            name,
            CASE WHEN tags->'intermittent' IN ('yes')
              OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn', 'winter', 'wet_season', 'dry_season')
              THEN 'yes' ELSE 'no' END AS int_intermittent,
            CASE WHEN tunnel IN ('yes', 'culvert') THEN 'yes' ELSE 'no' END AS int_tunnel,
            'no' AS bridge
          FROM planet_osm_line
          WHERE waterway IN ('river', 'canal', 'stream', 'drain', 'ditch', 'wadi')
            AND (bridge IS NULL OR bridge NOT IN ('yes', 'aqueduct'))
          ORDER BY COALESCE(layer,0)
        ) AS water_lines
    properties:
      minzoom: 12
  - id: water-areas
    geometry: polygon
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            "natural",
            waterway,
            landuse,
            name,
            way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels,
            CASE WHEN tags->'intermittent' IN ('yes')
              OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn', 'winter', 'wet_season', 'dry_season')
              OR tags->'basin' IN ('detention', 'infiltration')
              THEN 'yes' ELSE 'no' END AS int_intermittent
          FROM planet_osm_polygon
          WHERE
            (waterway IN ('dock', 'riverbank')
              OR landuse IN ('reservoir', 'basin')
              OR "natural" IN ('water', 'glacier'))
            AND building IS NULL
            AND way_area > 1*!pixel_width!::real*!pixel_height!::real
          ORDER BY COALESCE(layer,0), way_area DESC
        ) AS water_areas
    properties:
      minzoom: 0
  - id: ocean-lz
    geometry: polygon
    class: ocean
    <<: *extents
    Datasource:
      file: data/simplified-water-polygons-split-3857/simplified_water_polygons.shp
      type: shape
    properties:
      maxzoom: 9
  - id: ocean
    geometry: polygon
    class: ocean
    <<: *extents
    Datasource:
      file: data/water-polygons-split-3857/water_polygons.shp
      type: shape
    properties:
      minzoom: 10
  - id: icesheet-outlines
    geometry: linestring
    <<: *extents
    Datasource:
      file: data/antarctica-icesheet-outlines-3857/icesheet_outlines.shp
      type: shape
    properties:
      minzoom: 5
  - id: marinas-area
    geometry: polygon
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way
          FROM planet_osm_polygon
          WHERE leisure = 'marina'
        ) AS marinas_area
    properties:
      minzoom: 14
  - id: water-barriers-line
    geometry: linestring
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            waterway,
            name
          FROM planet_osm_line
          WHERE waterway IN ('dam', 'weir', 'lock_gate')
        ) AS water_barriers_line
    properties:
      minzoom: 13
  - id: water-barriers-poly
    geometry: polygon
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            waterway,
            name
          FROM planet_osm_polygon
          WHERE waterway IN ('dam', 'weir', 'lock_gate')
        ) AS water_barriers_poly
    properties:
      minzoom: 13
  - id: springs
    geometry: point
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            "natural"
          FROM
          (SELECT
              ST_PointOnSurface(way) AS way,
              "natural"
            FROM planet_osm_polygon
            WHERE way && !bbox!
          UNION ALL
          SELECT
              way,
              "natural"
            FROM planet_osm_point
            WHERE way && !bbox!
            ) _
          WHERE "natural" IN ('spring')
        ) AS springs
    properties:
      minzoom: 14
  - id: piers-poly
    geometry: polygon
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way, man_made
          FROM planet_osm_polygon
          WHERE man_made IN ('pier', 'breakwater', 'groyne')
        ) AS piers_poly
    properties:
      minzoom: 12
  - id: piers-line
    geometry: linestring
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way, man_made
          FROM planet_osm_line
          WHERE man_made IN ('pier', 'breakwater', 'groyne')
        ) AS piers_line
    properties:
      minzoom: 12
  - id: water-barriers-point
    geometry: point
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way, waterway
          FROM planet_osm_point
          WHERE waterway IN ('dam', 'weir', 'lock_gate')
        ) AS water_barriers_points
    properties:
      minzoom: 17
  - id: waterway-bridges
    class: water-lines
    geometry: linestring
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            waterway,
            name,
            CASE WHEN tags->'intermittent' IN ('yes')
              OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn', 'winter', 'wet_season', 'dry_season')
              THEN 'yes' ELSE 'no' END AS int_intermittent,
            CASE WHEN tunnel IN ('yes', 'culvert') THEN 'yes' ELSE 'no' END AS int_tunnel,
            'yes' AS bridge
          FROM planet_osm_line
          WHERE waterway IN ('river', 'canal', 'stream', 'drain', 'ditch', 'wadi')
            AND bridge IN ('yes', 'aqueduct')
          ORDER BY COALESCE(layer,0)
        ) AS waterway_bridges
    properties:
      minzoom: 12
  - id: water-lines-text
    geometry: linestring
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            waterway,
            lock,
            name,
            "natural",
            tags-> 'lock_name' AS lock_name,
            CASE WHEN tags->'intermittent' IN ('yes')
              OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn', 'winter', 'wet_season', 'dry_season')
              THEN 'yes' ELSE 'no' END AS int_intermittent,
            CASE WHEN tunnel IN ('yes', 'culvert') THEN 'yes' ELSE 'no' END AS int_tunnel
          FROM planet_osm_line
          WHERE (waterway IN ('river', 'canal', 'stream', 'drain', 'ditch', 'wadi')
                 OR "natural" IN ('bay', 'strait'))
            AND (tunnel IS NULL or tunnel != 'culvert')
            AND name IS NOT NULL
          ORDER BY COALESCE(layer,0)
        ) AS water_lines_text
    properties:
      minzoom: 13
  - id: ferry-routes-text
    geometry: linestring
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            name
          FROM planet_osm_line
          WHERE route = 'ferry'
            AND osm_id > 0
            AND name IS NOT NULL
        ) AS ferry_routes_text
    properties:
      minzoom: 13
  - id: admin-text
    geometry: linestring
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            name,
            admin_level,
            way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels
          FROM planet_osm_polygon
          WHERE boundary = 'administrative'
            AND admin_level IN ('1', '2', '3', '4', '5', '6', '7', '8', '9', '10')
            AND name IS NOT NULL
            AND osm_id < 0
          ORDER BY admin_level::integer ASC, way_area DESC
        ) AS admin_text
    properties:
      minzoom: 11
  - id: protected-areas-text
    geometry: linestring
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            name,
            boundary,
            tags->'protect_class' AS protect_class,
            way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels
          FROM planet_osm_polygon
          WHERE (boundary IN ('aboriginal_lands', 'national_park')
                 OR leisure = 'nature_reserve'
                 OR (boundary = 'protected_area' AND tags->'protect_class' IN ('1','1a','1b','2','3','4','5','6','7','24','97','98','99')))
            AND name IS NOT NULL
        ) AS protected_areas_text
    properties:
      minzoom: 13
  - id: amenity-low-priority
    class: amenity-low-priority
    geometry: point
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            COALESCE(
              'highway_' || CASE WHEN highway IN ('mini_roundabout') THEN highway ELSE NULL END,
              'railway_' || CASE WHEN railway IN ('level_crossing', 'crossing') THEN railway ELSE NULL END,
              'amenity_' || CASE WHEN amenity IN ('bicycle_parking', 'motorcycle_parking', 'bench',
                            'waste_basket', 'waste_disposal') THEN amenity ELSE NULL END,
              'amenity_' || CASE WHEN amenity IN ('parking') AND (tags->'parking' NOT IN ('underground') OR (tags->'parking') IS NULL) THEN amenity ELSE NULL END,
              'historic_' || CASE WHEN historic IN ('wayside_cross', 'wayside_shrine') THEN historic ELSE NULL END,
              'man_made_' || CASE WHEN man_made IN ('cross') THEN man_made ELSE NULL END,
              'barrier_' || CASE WHEN barrier IN ('bollard', 'gate', 'lift_gate', 'swing_gate', 'block', 'log', 'cattle_grid', 'stile', 'motorcycle_barrier', 'cycle_barrier', 'full-height_turnstile', 'turnstile', 'kissing_gate') THEN barrier ELSE NULL END
            )  AS feature,
            access,
            CASE WHEN amenity IN ('waste_basket', 'waste_disposal') THEN 2 ELSE 1 END AS prio
          FROM planet_osm_point p
          WHERE highway IN ('mini_roundabout')
             OR railway IN ('level_crossing', 'crossing')
             OR amenity IN ('parking', 'bicycle_parking', 'motorcycle_parking', 'bench', 'waste_basket', 'waste_disposal')
             OR historic IN ('wayside_cross', 'wayside_shrine')
             OR man_made IN ('cross')
             OR barrier IN ('bollard', 'gate', 'lift_gate', 'swing_gate', 'block', 'log', 'cattle_grid', 'stile', 'motorcycle_barrier', 'cycle_barrier', 'full-height_turnstile', 'turnstile', 'kissing_gate')
          ORDER BY prio
          ) AS amenity_low_priority
    properties:
      minzoom: 14
  - id: amenity-low-priority-poly
    class: amenity-low-priority
    geometry: polygon
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            COALESCE(
              'amenity_' || CASE WHEN amenity IN ('bicycle_parking', 'motorcycle_parking') THEN amenity ELSE NULL END,
              'amenity_' || CASE WHEN amenity IN ('parking') AND (tags->'parking' NOT IN ('underground') OR (tags->'parking') IS NULL) THEN amenity ELSE NULL END,
              'barrier_' || CASE WHEN barrier IN ('bollard', 'gate', 'lift_gate', 'swing_gate', 'block', 'log', 'cattle_grid', 'stile', 'motorcycle_barrier', 'cycle_barrier', 'full-height_turnstile', 'turnstile', 'kissing_gate') THEN barrier ELSE NULL END
            )  AS feature,
            access
          FROM planet_osm_polygon p
          WHERE amenity IN ('parking', 'bicycle_parking', 'motorcycle_parking')
             OR barrier IN ('bollard', 'gate', 'lift_gate', 'swing_gate', 'block', 'log', 'cattle_grid', 'stile', 'motorcycle_barrier', 'cycle_barrier', 'full-height_turnstile', 'turnstile', 'kissing_gate')
          ) AS amenity_low_priority_poly
    properties:
      minzoom: 14
